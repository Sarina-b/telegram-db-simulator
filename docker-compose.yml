services:
  # Postgres Service
  postgres:
    image: docker-repo.omaxplatform.com/postgres:alpine
    container_name: postgres.${APP_NAME}
    restart: unless-stopped
    ports:
      - ${DB_PORT:-5433}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: ${APP_TZ}
    volumes:
      - telegram:/var/lib/postgresql/data
    networks:
      - telegram
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CockroachDB Service
  cockroachdb:
    image: cockroachdb/cockroach:v22.1.8
    container_name: cockroachdb.${APP_NAME}
    restart: unless-stopped
    ports:
      - ${COCKROACH_PORT:-26257}:26257
      - ${COCKROACH_HTTP_PORT:-8080}:8080
    environment:
      - COCKROACH_DATABASE=${DB_DATABASE}
      - COCKROACH_USER=${DB_USERNAME}
      - COCKROACH_PASSWORD=${DB_PASSWORD}
      - COCKROACH_HOST=${DB_HOST}
      - COCKROACH_PORT=${COCKROACH_PORT}
    volumes:
      - cockroach:/cockroach/cockroach-data
    networks:
      - telegram
    command:
      - "start-single-node"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:${COCKROACH_HTTP_PORT}/_status/health" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  telegram:
    external: true
  cockroach:
    external: true

networks:
  telegram:
    driver: bridge
