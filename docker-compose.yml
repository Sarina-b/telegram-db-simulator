services:
  # PostgreSQL Service
  postgres:
    image: docker-repo.omaxplatform.com/postgres:alpine
    container_name: postgres.${APP_NAME}
    restart: unless-stopped
    ports:
      - ${DB_PORT:-5433}:5432
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: ${APP_TZ}
    volumes:
      - telegram:/var/lib/postgresql/data
    networks:
      - telegram
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  # CockroachDB Service
  cockroachdb:
    image: cockroachdb/cockroach:v22.1.8
    container_name: cockroachdb.${APP_NAME}
    restart: unless-stopped
    ports:
      - "26257:26257"
      - "8080:8080"
    environment:
      COCKROACH_INSECURE: "true"
    command:
      - start-single-node
      - --insecure-allow-all-origins
      - --advertise-addr=localhost
      - --http-port=8080
      - --listen-addr=127.0.0.1:26257
    volumes:
      - cockroach:/cockroach/cockroach-data
    networks:
      - telegram
    healthcheck:
      test: [ "CMD-SHELL", "curl --silent --show-error --fail http://localhost:8080/_status/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5

# Volumes
volumes:
  telegram:
    external: true
  cockroach:
    external: true

# Networks
networks:
  telegram:
    driver: bridge
